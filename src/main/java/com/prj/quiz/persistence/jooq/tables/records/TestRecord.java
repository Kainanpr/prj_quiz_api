/*
 * This file is generated by jOOQ.
 */
package com.prj.quiz.persistence.jooq.tables.records;


import com.prj.quiz.persistence.jooq.tables.Test;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestRecord extends UpdatableRecordImpl<TestRecord> implements Record10<Integer, String, String, String, String, String, String, String, Integer, Integer> {

    private static final long serialVersionUID = -886381091;

    /**
     * Setter for <code>test.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.question</code>.
     */
    public void setQuestion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.question</code>.
     */
    public String getQuestion() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.option_1</code>.
     */
    public void setOption_1(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.option_1</code>.
     */
    public String getOption_1() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.option_2</code>.
     */
    public void setOption_2(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.option_2</code>.
     */
    public String getOption_2() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.option_3</code>.
     */
    public void setOption_3(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.option_3</code>.
     */
    public String getOption_3() {
        return (String) get(4);
    }

    /**
     * Setter for <code>test.option_4</code>.
     */
    public void setOption_4(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.option_4</code>.
     */
    public String getOption_4() {
        return (String) get(5);
    }

    /**
     * Setter for <code>test.option_5</code>.
     */
    public void setOption_5(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>test.option_5</code>.
     */
    public String getOption_5() {
        return (String) get(6);
    }

    /**
     * Setter for <code>test.answer</code>.
     */
    public void setAnswer(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>test.answer</code>.
     */
    public String getAnswer() {
        return (String) get(7);
    }

    /**
     * Setter for <code>test.content_id</code>.
     */
    public void setContentId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>test.content_id</code>.
     */
    public Integer getContentId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>test.level_id</code>.
     */
    public void setLevelId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>test.level_id</code>.
     */
    public Integer getLevelId() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, String, String, String, String, String, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, String, String, String, String, String, Integer, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Test.TEST.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Test.TEST.QUESTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Test.TEST.OPTION_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Test.TEST.OPTION_2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Test.TEST.OPTION_3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Test.TEST.OPTION_4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Test.TEST.OPTION_5;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Test.TEST.ANSWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Test.TEST.CONTENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Test.TEST.LEVEL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getQuestion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getOption_1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getOption_2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getOption_3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getOption_4();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getOption_5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getContentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getLevelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getQuestion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getOption_1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOption_2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getOption_3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getOption_4();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getOption_5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getContentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getLevelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value2(String value) {
        setQuestion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value3(String value) {
        setOption_1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value4(String value) {
        setOption_2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value5(String value) {
        setOption_3(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value6(String value) {
        setOption_4(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value7(String value) {
        setOption_5(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value8(String value) {
        setAnswer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value9(Integer value) {
        setContentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord value10(Integer value) {
        setLevelId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, Integer value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestRecord
     */
    public TestRecord() {
        super(Test.TEST);
    }

    /**
     * Create a detached, initialised TestRecord
     */
    public TestRecord(Integer id, String question, String option_1, String option_2, String option_3, String option_4, String option_5, String answer, Integer contentId, Integer levelId) {
        super(Test.TEST);

        set(0, id);
        set(1, question);
        set(2, option_1);
        set(3, option_2);
        set(4, option_3);
        set(5, option_4);
        set(6, option_5);
        set(7, answer);
        set(8, contentId);
        set(9, levelId);
    }
}
